Your goal is to provide a detailed suitability analysis and then structure the output as a JSON object containing BOTH the original job data AND your analysis results.

Analyze the provided structured resume data (Resume Data JSON) and the job data dictionary (Job Data Dictionary). Focus on comparing the candidate's skills (management & technical), experience (years, roles, accomplishments from resume), education, and key achievements against the requirements mentioned in the job's 'title', 'description', 'skills' list (if provided), and any other relevant fields in the job data.

Candidate Resume Data (JSON):
---
{resume_data_json}
---

Job Data (Dictionary - Use all fields for context, focus analysis on 'title', 'description', 'skills', location', etc.):
---
{job_data_json}
---

Based on this detailed comparison, generate a JSON output containing two top-level keys:
1.  `original_job_data`: This key's value should be the **complete, unmodified JSON object** that was provided as the 'Job Data Dictionary' input above.
2.  `analysis`: This key's value should be a JSON object containing your analysis results, structured according to the fields defined below. Calculate a suitability score (0-100) reflecting how well the candidate's profile matches the job's requirements.

Output *only* the final, complete JSON object containing these two keys (`original_job_data` and `analysis`). Do not include any introductory text, explanations, or markdown formatting like ```json outside of the JSON structure itself.

JSON Structure to populate:
{{
  "original_job_data": {{
      // The entire content of the '{job_data_json}' input dictionary goes here.
      // Preserve all original fields and their values exactly.
      "title": "...",
      "company": "...",
      "location": "...",
      "description": "...",
      "skills": ["...", "..."],
      "url": "...",
      "employment_type": "...",
      "salary_text": "...",
      // etc. - ALL original fields from the input job data.
  }},
  "analysis": {{
    "suitability_score": "integer (0-100, based on overall fit with required qualifications, skills, and experience mentioned in the job posting, considering the candidate's resume data)",
    "justification": "string (Detailed explanation for the score. Explicitly compare the candidate's experience duration, specific roles, technical skills, management skills, and key accomplishments against the job requirements. Highlight key strengths and specific gaps for this role based on the job description.)",
    "skill_match": "boolean (Considering both management and technical skills from the resume, do they strongly align with the skills explicitly required or heavily implied in the job description?)",
    "experience_match": "boolean (Does the candidate's total years of experience AND the nature of their roles/accomplishments (from resume 'experience' and 'key_accomplishments') align well with the experience level and responsibilities described in the job posting?)",
    "qualification_match": "boolean (Does the candidate meet the essential educational or certification qualifications mentioned in the job posting, based on the resume's 'education' section?)",
    "salary_alignment": "string (Assess potential salary fit based on the job's salary info [if present] vs. candidate's profile [experience level, roles]. Options: 'Likely Fit', 'Potentially Below Range', 'Potentially Above Range', 'Insufficient Job Data')",
    "benefit_alignment": "string (Assess benefit alignment based on job's 'benefits_text' [if present]. Options: 'Mentions Standard Benefits', 'Specific Benefit Alignment', 'Insufficient Data')",
    "missing_keywords": ["string (List a few specific, important keywords [skills, technologies, qualifications, concepts] mentioned as required in the job description that seem absent or underrepresented in the candidate's resume.)"]
  }}
}}

Analysis JSON: